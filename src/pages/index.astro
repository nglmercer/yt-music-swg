---
import MainLayout from '../layouts/MainLayout.astro';
import Navbar from '../components/Navbar.astro';
import Sidebar from '../components/Sidebar.astro';
import Player from '../components/Player.svelte';
import Playlist from '../components/PlaylistItems.svelte'
---

<MainLayout title="YouTube Music">
  <Navbar slot="header" />
  <Sidebar slot="sidebar" />
  
  <!-- Main Content -->
  <div class="p-4 md:p-6 pb-24">
    <div class="max-w-7xl mx-auto">
      <!-- Welcome Section -->
      <div class="mb-8">
        <h1 class="text-2xl md:text-3xl font-bold mb-2">Bienvenido de nuevo</h1>
        <p class="text-gray-400">Tu música, siempre contigo</p>
      </div>
      
      <!-- Quick Actions -->
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 md:gap-4 mb-8">
        <div class="bg-gray-800 rounded-lg p-4 hover:bg-gray-700 transition-colors cursor-pointer">
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 md:w-12 md:h-12 bg-blue-500 rounded-lg flex items-center justify-center flex-shrink-0">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
              </svg>
            </div>
            <div class="min-w-0">
              <h3 class="text-sm md:text-base font-medium truncate">Canciones que te gustan</h3>
              <p class="text-sm text-gray-400">15 canciones</p>
            </div>
          </div>
        </div>
        
        <div class="bg-gray-800 rounded-lg p-4 hover:bg-gray-700 transition-colors cursor-pointer">
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 md:w-12 md:h-12 bg-green-500 rounded-lg flex items-center justify-center flex-shrink-0">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"/>
              </svg>
            </div>
            <div class="min-w-0">
              <h3 class="text-sm md:text-base font-medium truncate">Descargas</h3>
              <p class="text-sm text-gray-400">8 canciones</p>
            </div>
          </div>
        </div>
        
        <div class="bg-gray-800 rounded-lg p-4 hover:bg-gray-700 transition-colors cursor-pointer">
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 md:w-12 md:h-12 bg-purple-500 rounded-lg flex items-center justify-center flex-shrink-0">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"/>
              </svg>
            </div>
            <div class="min-w-0">
              <h3 class="text-sm md:text-base font-medium truncate">Listas de reproducción</h3>
              <p class="text-sm text-gray-400">3 listas</p>
            </div>
          </div>
        </div>
        
        <div class="bg-gray-800 rounded-lg p-4 hover:bg-gray-700 transition-colors cursor-pointer">
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 md:w-12 md:h-12 bg-gradient-to-br from-orange-500 to-red-500 rounded-lg flex items-center justify-center flex-shrink-0">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
            </div>
            <div class="min-w-0">
              <h3 class="text-sm md:text-base font-medium truncate">Mi SuperMix</h3>
              <p class="text-sm text-gray-400">Basado en tu actividad</p>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Featured Content -->
      <div class="space-y-8">
        <section>
          <h2 class="text-xl md:text-2xl font-bold mb-4">Escucha de nuevo</h2>
          <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-3 md:gap-4">
            <!-- Album Cards -->
            {Array.from({ length: 6 }).map((_, i) => (
              <div class="group cursor-pointer">
                <div class="aspect-square bg-gray-700 rounded-lg mb-2 md:mb-3 relative overflow-hidden">
                  <div class="absolute inset-0 bg-gradient-to-br from-blue-500 to-purple-600 opacity-80"></div>
                  <div class="absolute inset-0 flex items-center justify-center">
                    <svg class="w-8 h-8 md:w-12 md:h-12 text-white" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z"/>
                    </svg>
                  </div>
                  <button class="absolute bottom-1 right-1 md:bottom-2 md:right-2 p-1.5 md:p-2 bg-green-500 rounded-full opacity-0 group-hover:opacity-100 transition-opacity">
                    <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M8 5v14l11-7z"/>
                    </svg>
                  </button>
                </div>
                <h3 class="text-sm md:text-base font-medium truncate">Álbum {i + 1}</h3>
                <p class="text-sm text-gray-400 truncate">Artista {i + 1}</p>
              </div>
            ))}
          </div>
        </section>
        <Playlist client:only="svelte"/>
      </div>
    </div>
  </div>
  
  <!-- Player at the bottom -->
  <Player client:only="svelte" />
<script>
    import { YTMusicApi } from "../utils/fetch/fetchapi";
    import { exportarJSON } from "../utils/jsonbackups/export";
  import type { SongData } from "../utils/fetch/youtube-music";
  // Función para obtener la canción y despachar el evento
  async function checkForUpdates() {
    try {
      console.log('Buscando actualización de la canción...');
      const newSongData = await YTMusicApi.getCurrentSong();

      if (newSongData) {
        console.log('Nuevos datos encontrados. Despachando evento "update-song".');
        
        // 1. Creamos el evento personalizado. El nombre 'update-song' es arbitrario.
        const event = new CustomEvent('update-song', {
          // 2. La información que queremos pasar va en la propiedad 'detail'.
          detail: newSongData
        });
        
        // 3. Despachamos el evento en el objeto 'window' para que esté disponible globalmente.
        window.dispatchEvent(event);
      }
    } catch (error) {
      console.error("Error al buscar actualizaciones:", error);
    }
  }
  checkForUpdates()
  // Hacemos una comprobación periódica para ver si la canción ha cambiado
  setInterval(checkForUpdates, 10000); // Cada 10 segundos
  interface QueueItem {
    autoPlaying: boolean,
    continuation?: string,
    items: any[]
  }
  async function getQueue() {
    const queue:QueueItem|null  = await YTMusicApi.getQueue();
    console.log("queue: ", queue?.items[0])
    const event = new CustomEvent('updatePlaylist',{
      detail: queue?.items
    })
    window.dispatchEvent(event);
    return queue
  }
  getQueue()
  setInterval(getQueue, 10000);
</script>